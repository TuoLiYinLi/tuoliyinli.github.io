<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>霓虹攀升-游戏设计</title>
    <link href="/2022/07/08/%E9%9C%93%E8%99%B9%E6%94%80%E5%8D%87-%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1/"/>
    <url>/2022/07/08/%E9%9C%93%E8%99%B9%E6%94%80%E5%8D%87-%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1/</url>
    
    <content type="html"><![CDATA[<div class="note note-primary">            <p>分为两部分，第一部分谈论游戏霓虹攀升的灵感起点，设计准则，未来方向，展示游戏设计制作理念；第二部分补充我对游戏组成的理解。</p>          </div><h1 id="霓虹攀升-Neon-Ascending"><a href="#霓虹攀升-Neon-Ascending" class="headerlink" title="霓虹攀升 Neon Ascending"></a>霓虹攀升 Neon Ascending</h1><iframe src="https://itch.io/embed/1558012?linkback=true&amp;border_width=5&amp;bg_color=222222&amp;fg_color=fffdd3&amp;link_color=173cba&amp;border_color=000000" width="560" height="175" frameborder="0"><a href="https://tuoliyinli.itch.io/neon-ascending">霓虹攀升 Neon Ascending by TuoLiYinLi</a></iframe><h2 id="核心"><a href="#核心" class="headerlink" title="核心"></a>核心</h2><p>我发现了一个规律：人类骨子里谋求一种增长之上的增长。<br>比如钱生钱，资本的聚集。比如聪明人发明机器人来帮自己干活，又有人发明能创造机器人的机器。我们学习知识，然后又强调学习的最高境界是去学习这种学习行为本身。人们把一件事做完，就想到让它更快的做完、自动化的作完。这样的例子简直贯穿了人性，人类会不断追逐这样的超越过程。<br>所以，我从这个点出发：<strong>一个能让玩家不断地获取增长的游戏</strong>。成长的速度也会成长，而成长速度的成长的速度也会成长，而……（好吧）<br>这个核心是符合人类本质的，对于喜爱上述这种“增长”的人来说是好玩的。</p><p>假如在游戏中你有一个攻击力为1的武器，你可以升级伤害，于是攻击力变成3、4、5……，你还可以提高暴击率，现在它有可能造成1.5倍的伤害，你还可以提高它的暴击倍数，它可以造成2倍、2.5倍的伤害，攻击力开始飙升，30、40、50……然后你现在获取不同的武器，有的武器攻击速度更快，有的武器可以穿透敌人……</p><p>无论如何，你在一步步地提升，快速的成长。这是符合所设想的核心的。</p><p>这就是叠Buff。</p><h2 id="形式"><a href="#形式" class="headerlink" title="形式"></a>形式</h2><p>但这样还不能玩，缺少具体的形式。在这个内核之上，可以设计出什么样的形式呢？这里首先要侧重于<strong>逻辑形式</strong>。</p><p>优先在各种方案中选择框架清晰的、易于实现的、可以扩展的、有先例可鉴的。<br>推敲过程包括从现有游戏中提炼和修改并形成自己的方案，还可以发挥想象力，创造一些新奇和独特之处。<br>经过思考，我提出一个游戏原型，并且将从空间上、时间上等方面说明它的性质。</p><p><strong>原型一</strong></p><ul><li>整个场景是一个二维方形网格棋盘</li><li>每个网格允许向其中放置属于玩家的方块，从而发挥不同的效果，比如刚才说到的武器可以进行攻击，其它的则可以提高这些武器的效果。</li><li>时间是连续的，敌人会源源不断地涌来，武器会自动地攻击靠近的敌人。</li><li>在击败一定数量的敌人后，玩家获得升级，可以添加方块来提高自己的实力。</li><li>如果敌人摧毁了玩家的所有方块，那么游戏结束。</li></ul><p>这些听起来有点意思了，接下来可以细化这些规则，如有多少个网格，有哪些武器以及可以提高的属性？有什么样的敌人？如何升级？</p><p>首先，我认为武器可以看作是不同属性的组合产物，所以要先确定可用的属性：<br>最关键的问题：子弹的攻击力、暴击率、暴击伤害、攻击速度<br>不那么关键但是可以起到特殊作用：子弹的速度、体积、视野范围<br>一些加戏的特效：燃烧效果、冰冻效果</p><p>于是武器可以有高攻击力、低射速的闪电；有射速高的机枪；有视野很大，攻击很准的武器；有能穿透大量敌人的切割武器……</p><p>理论上，敌人也要有与之相对应的特点，但是不妨设计得更简单点：<br>敌人属性：移动速度，攻击力，血量。<br>敌人的血量会越来越高，数量会变化，这是最直观的，一定程度上可以替代许多花哨的设计。<br>由于方块不能移动，敌人的进攻行为可以简化为近距离接触造成伤害。敌人的远程攻击其实也可以看作是等效的由较大体积、更快速度的敌人进行的近距离攻击。<br>敌人从四面八方包围玩家会更加困难，因为能同时接近玩家的敌人数量增加了。四面八方的包围与从一个角度突破是非常类似的，只不过是放置一圈防御塔和放一排防御塔的区别。<br>玩家选择方块并提升实力的过程非常有rogue-like的感觉，也很匹配叠Buff的初衷，可以从类似的游戏中借鉴提取。</p><p><strong>原型二</strong></p><ul><li>整个场景是一个二维方形网格棋盘，长宽为15x61。</li><li>每个网格允许向其中放置属于玩家的方块，从而发挥不同的效果。武器和Buff如上。</li><li>时间是连续的，敌人会源源不断地从上方涌来，武器会自动地攻击靠近的敌人。</li><li>敌人会对碰到的方块造成伤害并摧毁它们。</li><li>如果敌人摧毁了玩家的所有方块，那么游戏结束。</li><li>游戏按波次进行，每一波一定数量的敌人，玩家成功击败一波敌人后随机抽取若干个模块，选择其中的一个进行放置。</li></ul><p>现在游戏形式已经基本敲定。<br>再来探讨一些更具体的方块设计和数值的安排。<br>对应每一种Buff至少可以设置一种加成方块，提供视野、射速、攻击力、暴击率等等。<br>对应游戏的机制也可以有一些增益的Buff，比如重新抽取模块、一次有更多抽取模块的选择、每回合结束可以放置更多的模块。<br>此外针对不同的武器也可以提升它们的特殊效果，</p><h1 id="小理论：游戏组成"><a href="#小理论：游戏组成" class="headerlink" title="小理论：游戏组成"></a>小理论：游戏组成</h1><h2 id="1-内核"><a href="#1-内核" class="headerlink" title="1.内核"></a>1.内核</h2><p>一个没有玩法内核的游戏往往没人会玩第二遍，一个没有精神内核的游戏无法打动玩家。</p><h2 id="2-形式"><a href="#2-形式" class="headerlink" title="2.形式"></a>2.形式</h2><p>形式是对内核的实现。内核是骨头，形式是肉。<br>我简单地把形式分为逻辑形式、线性流程、表现形式三个部分</p><h3 id="2-1-逻辑形式"><a href="#2-1-逻辑形式" class="headerlink" title="2.1.逻辑形式"></a>2.1.逻辑形式</h3><p>所谓逻辑形式就是指构成游戏性的那些基本规则。如斗地主要求值大的牌胜过值小的；玩家定时要吃西否则会饿死；当球被踢进球门，进攻方取地分数。<br>另外，玩法规则对于不同游戏的意义是不一样的：</p><ul><li>文字冒险游戏极大地削弱了游戏性，而重视其它方面，玩法规则就是点击屏幕而已</li><li>冒险游戏、平台跳跃游戏需要玩家躲避怪物，解开谜题，游戏性较高</li><li>沙盒游戏中各种规则都与各个独立的元素有关，不同的物体和道具呈现不同效果，玩法丰富复杂。</li></ul><p>从提到的最复杂的沙盒游戏来进行分析，可以发现游戏最完善的形态就是对现实的模拟和超越，但是从技术上来说，我们很难利用游戏超越时间和空间的逻辑。即便游戏的内容纵横古今，从城堡到太空，其呈现的时间和空间也无外乎几种。</p><p>我个人比较喜欢沙盒游戏的模式，而且比较熟悉，所以在设计这个游戏时也选择了一些接近的元素，比如自由放置组合。</p><h4 id="2-1-1-空间性质"><a href="#2-1-1-空间性质" class="headerlink" title="2.1.1.空间性质"></a>2.1.1.空间性质</h4><ul><li>连续空间是最拟合现实的，可以分为二维和三维。二维又可以分为俯视和横板卷轴等等。有的游戏看似是三维，具有一定的高低差，但是人物却不能跳也不能遁地。而又有的游戏看似是二维却有深度的切换和不同场景的传送切换。</li><li>网格空间是一种更抽象、更符合人类思维的设计。网格往往也是二维的。网格空间的游戏在规则上往往更加复杂，棋类就是一个好例子。<br>但是网格空间还可以衍生为点与线组成的网络，这是一种图结构，也有基于此的游戏。</li></ul><p>霓虹攀升的空间划分一个15x60的矩形棋盘，每个格子里可以安放一个方形的模组。</p><h4 id="2-1-2-时间性质"><a href="#2-1-2-时间性质" class="headerlink" title="2.1.2.时间性质"></a>2.1.2.时间性质</h4><p>连续时间是最拟合现实的，应用广泛。另一种是回合制，看起来简单，但是回合制的游戏往往会花更多精力来设计规则。</p><h4 id="2-1-3-其它"><a href="#2-1-3-其它" class="headerlink" title="2.1.3.其它"></a>2.1.3.其它</h4><p>每个游戏都拥有许多独特的部分，由此才变得复杂、丰富而有趣。<br>吃鸡：枪战、苟到最后<br>杀戮尖塔：牌组构建<br>我的世界：创造一切<br>Mindustry：流水线、经营、塔防<br>星露谷：代入感、经营养成<br>黑魂：时机、技巧、黑暗奇幻<br>辐射四：一个废土世界、自由的探索<br>奇异人生：穿越时空的友谊故事<br>……</p><p>阻止玩家做出意外之举或者说屏蔽一些清奇的思路是应该被重视的。玩家在餐桌上蹲起、跑到地图之外甚至开挂，都是需要思考的。同时用过于明显和强硬的手段控制玩家是不友好的。比如放太多明显的空气墙，设置不可击败的boss，会令人感到不平。</p><h3 id="2-2-线性流程"><a href="#2-2-线性流程" class="headerlink" title="2.2.线性流程"></a>2.2.线性流程</h3><p>不管是什么游戏最后营造的体验都可以说是线性的，因为玩家的时间只会向未来流动，即便游戏设计有多条可能的分支，玩家最终也只能选择某一条路径。</p><h4 id="2-2-1-故事性的"><a href="#2-2-1-故事性的" class="headerlink" title="2.2.1.故事性的"></a>2.2.1.故事性的</h4><p>强调故事性的游戏就像是一部可以互动的小说、电影，主要由故事内容支撑起来，游戏的内核转移到故事的内核。其中穿插的解密、冒险等游戏性元素将在故事之上增加它的趣味。</p><h4 id="2-2-2-规则性的"><a href="#2-2-2-规则性的" class="headerlink" title="2.2.2.规则性的"></a>2.2.2.规则性的</h4><p>强调规则性的游戏更加开门见山，就像篮球比赛和五子棋一样，玩家学习规则然后投入到一些关卡和比赛中去。这一部分强调游戏规则带来的乐趣，在规则上创造出方法和战术，在规则下锻炼快速的反应和准确的记忆力。</p><h4 id="2-2-3-二者兼备的"><a href="#2-2-3-二者兼备的" class="headerlink" title="2.2.3.二者兼备的"></a>2.2.3.二者兼备的</h4><p>故事性并不与玩法相抵触，但制作游戏往往是有所侧重的，做到故事性与玩法兼顾需要更高的成本。比如开放世界游戏角色扮演游戏，有丰富的人物故事，多种结局，还有一系列考验玩家实力的系统。</p><h3 id="2-3-表现形式"><a href="#2-3-表现形式" class="headerlink" title="2.3.表现形式"></a>2.3.表现形式</h3><p>游戏最终要以图像和声音作为媒介。</p><h4 id="2-3-1-视觉呈现"><a href="#2-3-1-视觉呈现" class="headerlink" title="2.3.1.视觉呈现"></a>2.3.1.视觉呈现</h4><h4 id="2-3-2-听觉呈现"><a href="#2-3-2-听觉呈现" class="headerlink" title="2.3.2.听觉呈现"></a>2.3.2.听觉呈现</h4><h4 id="2-3-3-风格"><a href="#2-3-3-风格" class="headerlink" title="2.3.3.风格"></a>2.3.3.风格</h4><p>不论是什么样的视觉和听觉传达，最终要达到和谐，并且往往可以用某一种风格来归类它们。如，清新的，血腥的，柔弱的，仇恨的，幽默的，悲惨的，复杂而严谨的，爽快而刺激的。风格也应当搭配游戏的逻辑形式和线性流程，否则就会显得割裂和错乱。</p>]]></content>
    
    
    <categories>
      
      <category>作品集</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏设计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>模块化的古树侦察保护概念设计</title>
    <link href="/2022/07/07/%E6%A8%A1%E5%9D%97%E5%8C%96%E7%9A%84%E5%8F%A4%E6%A0%91%E4%BE%A6%E5%AF%9F%E4%BF%9D%E6%8A%A4%E6%A6%82%E5%BF%B5%E8%AE%BE%E8%AE%A1/"/>
    <url>/2022/07/07/%E6%A8%A1%E5%9D%97%E5%8C%96%E7%9A%84%E5%8F%A4%E6%A0%91%E4%BE%A6%E5%AF%9F%E4%BF%9D%E6%8A%A4%E6%A6%82%E5%BF%B5%E8%AE%BE%E8%AE%A1/</url>
    
    <content type="html"><![CDATA[<p><img src="https://s1.ax1x.com/2022/07/07/jwd4Rx.png" alt="P1"><br><img src="https://s1.ax1x.com/2022/07/07/jwdfiR.png" alt="P2"><br><img src="https://s1.ax1x.com/2022/07/07/jwd5z6.png" alt="P3"><br><img src="https://s1.ax1x.com/2022/07/07/jwdhJ1.png" alt="P4"><br><img src="https://s1.ax1x.com/2022/07/07/jwdoQK.png" alt="P5"><br><img src="https://s1.ax1x.com/2022/07/07/jwdqdH.png" alt="P6"><br><img src="https://s1.ax1x.com/2022/07/07/jwdTsO.png" alt="P7"><br><img src="https://s1.ax1x.com/2022/07/07/jwd7LD.png" alt="P8"></p>]]></content>
    
    
    <categories>
      
      <category>作品集</category>
      
    </categories>
    
    
    <tags>
      
      <tag>产品设计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于人机工程学的大学床铺改进设计</title>
    <link href="/2022/07/07/%E5%9F%BA%E4%BA%8E%E4%BA%BA%E6%9C%BA%E5%B7%A5%E7%A8%8B%E5%AD%A6%E7%9A%84%E5%A4%A7%E5%AD%A6%E5%BA%8A%E9%93%BA%E6%94%B9%E8%BF%9B%E8%AE%BE%E8%AE%A1/"/>
    <url>/2022/07/07/%E5%9F%BA%E4%BA%8E%E4%BA%BA%E6%9C%BA%E5%B7%A5%E7%A8%8B%E5%AD%A6%E7%9A%84%E5%A4%A7%E5%AD%A6%E5%BA%8A%E9%93%BA%E6%94%B9%E8%BF%9B%E8%AE%BE%E8%AE%A1/</url>
    
    <content type="html"><![CDATA[<p><img src="https://s1.ax1x.com/2022/07/07/jwGzbn.jpg" alt="展板"><br><img src="https://s1.ax1x.com/2022/07/07/jwtetx.jpg" alt="渲染图"></p>]]></content>
    
    
    <categories>
      
      <category>作品集</category>
      
    </categories>
    
    
    <tags>
      
      <tag>产品设计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>建站小故事：阿里云、nginx、hexo和git</title>
    <link href="/2022/07/01/%E5%BB%BA%E7%AB%99%E5%B0%8F%E6%95%85%E4%BA%8B/"/>
    <url>/2022/07/01/%E5%BB%BA%E7%AB%99%E5%B0%8F%E6%95%85%E4%BA%8B/</url>
    
    <content type="html"><![CDATA[<div class="note note-primary">            <p>搭建个人网站的一点点经验总结以及对原有教程的补充</p>          </div><p>建站又是一阵折腾……<br>参考教程 <a href="https://blog.objectspace.cn/2019/08/15/%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2%E5%B9%B6%E9%83%A8%E7%BD%B2%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8-%E5%A5%B6%E5%A6%88%E7%BA%A7%E6%95%99%E5%AD%A6/">从零搭建Hexo博客并部署阿里云服务器</a><br>常常苦口婆心地讲，要授人以渔，而这恰恰说明授人以渔是鲜有人做到。<br>虽然是跟随这个教程，但是仍然遇上了不少问题，折腾了很久，最终解决了，以下作为记录。</p><ol><li>建设逻辑：<ul><li>用<code>hexo</code>作为网页框架引擎：用<code>hexo</code>的插件把网页代码部署到远程仓库，同时还可以备份到<code>github</code></li><li>用<code>git</code>作为部署的工具：服务器上创建git账号，用于ssh登录和管理自定义的git仓库</li><li><code>ngnix</code>作为web服务器</li><li>用阿里云服务器，系统我选择的是 CentOS 8.2</li></ul></li><li>即便自定义git仓库可以<code>push</code>，也仅仅只是压缩储存了提交的内容，如果需要把这个自定义git仓库里的源代码提取出来，还需要用到git hook。在自定义的git仓库中应该有自动生成的<code>hooks</code>文件夹，其中的文件会按照文件名在特定的git命令执行时运行。我需要利用它来把本地上传的代码从仓库里部署到<code>ngnix</code>的网站根目录</li><li>git hook用法:<br> 编辑文件<code>blog.git/hooks/post-receive</code> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/sh</span><br>git --work-tree=/home/www/website --git-dir=/home/git/blog.git checkout -f<br></code></pre></td></tr></table></figure> 在<code>hooks</code>文件夹里的脚本会按照命名在特定时候触发运行。这里运行bash命令。<code>/home/www/website</code>是nginx的服务器目录。将<code>hexo</code>生成的<code>public</code>文件夹中的文件提交到此<code>blog.git</code>仓库后就会用<code>checkout</code>命令将文件同步到服务器的目录。上传部署就完成了</li><li>ssh 密钥配置方法<br> ssh密钥简单来说就是有两点：<ul><li>服务端必须在ssh服务设置中允许rst验证</li><li>服务端被登录的账号下有<code>.ssh/authorized_keys</code>文件，将客户端的公钥拷贝进去即为安装密钥</li></ul></li><li>git账户（或者你用于远程部署git仓库的账户）必须要有对应的修改权限</li><li>hexo deploy插件配置方法<br>   关键是多个git仓库如何配置，如下，在本地的hexo博客设置文件<code>_config.yml</code>中配置 <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br> <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br> <span class="hljs-attr">repo:</span><br><span class="hljs-string">&lt;repo</span> <span class="hljs-string">name</span> <span class="hljs-number">1</span><span class="hljs-string">&gt;:</span> <span class="hljs-string">https://github.com/&lt;who&gt;/&lt;repo&gt;,&lt;branch&gt;</span><br><span class="hljs-string">&lt;repo</span> <span class="hljs-string">name</span> <span class="hljs-number">2</span><span class="hljs-string">&gt;:</span> <span class="hljs-string">&lt;user&gt;@&lt;IP&gt;:/&lt;repo&gt;,&lt;branch&gt;</span><br><span class="hljs-attr">github:</span> <span class="hljs-string">https://github.com/TuoLiYinLi/BlogBackup.git,master</span><br><span class="hljs-string">...</span><br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>博客建设</category>
      
      <category>记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>云服务器</tag>
      
      <tag>nginx</tag>
      
      <tag>hexo</tag>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于类别(Categories)和标签(Tags)</title>
    <link href="/2022/06/30/%E5%85%B3%E4%BA%8E%E7%B1%BB%E5%88%AB-Categories-%E5%92%8C%E6%A0%87%E7%AD%BE-Tags/"/>
    <url>/2022/06/30/%E5%85%B3%E4%BA%8E%E7%B1%BB%E5%88%AB-Categories-%E5%92%8C%E6%A0%87%E7%AD%BE-Tags/</url>
    
    <content type="html"><![CDATA[<div class="note note-primary">            <p>简述本博客的类别和标签是如何安排的。</p>          </div><h1 id="类别"><a href="#类别" class="headerlink" title="类别"></a>类别</h1><p>决定了一篇文章的存在意义或目的，要仔细甄别</p><ul><li>【日常】关于体验和生活</li><li>【记录】收集和整理有用的资源和信息</li><li>【作品集】一些成品的展示和说明</li><li>【奇思妙想】一些新的思考和创意</li><li>【博客建设】关于此博客本身的建设和计划</li></ul><h1 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h1><p>决定了一篇文章的相关话题，更加随意</p><ul><li>【游戏】主要是现代电子游戏，也可指更宏观意义上的游戏</li><li>【编程】与编程和代码相关内容</li><li>【美术】与美术、设计相关</li><li>【音乐】与音乐、编曲相关</li><li>等……</li></ul>]]></content>
    
    
    <categories>
      
      <category>博客建设</category>
      
    </categories>
    
    
    <tags>
      
      <tag>说明</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
